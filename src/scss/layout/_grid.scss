// ==========================================================================
//   Grid.
// ==========================================================================

.row {
	width: $xl-row-width;
	margin: 0 auto;
	padding: 0 $grid-gutter/2;

    @include breakpoint(papa-bear) {
        width: $l-row-width;
    }

    @include breakpoint(mama-bear) {
        width: $m-row-width;
    }

    @include breakpoint(baby-bear) {
        width: $s-row-width;
    }

    @include breakpoint(goldilocks) {
        width: $xs-row-width;
    }

	&::after {
		content: "";
		display: table;
		clear: both;
	}

	&.fullwidth {
		width: 100%;
        padding: 0;
	}

	.row {
		width: auto;
	}
}

.col {
	float: left;
	padding: 0 $grid-gutter/2;
	margin-left: 0;
	min-height: 1px;
}

// Responsive grid
@each $column in $column-names {

    // Grid columns
    $j: 1;
    @while $j <= $grid-cols {
        $percentage: unquote((100 / ($grid-cols / $j)) + "%");

        .#{nth($column, 1)}#{$j} {
            @include breakpoint(nth($column, 2)) {
                width: $percentage;
            }
        }
        $j: $j + 1;
    }

    // Grid offset
    $k: 0;
    @while $k <= ($grid-cols - 1) {
        $percentage: unquote((100 / ($grid-cols / $k)) + "%");
        .offset-#{nth($column, 1)}#{$k} {
            @include breakpoint(nth($column, 2)) {
                margin-left: $percentage;
            }
        }
        $k: $k + 1;
    }

    // Some standard variants
    $column-standards: (
        "half": 50%,
        "third": 33.3333%,
        "twothird": 66.6666%,
        "quarter": 25%,
        "threequarter": 75%
    );

    @each $standard in $column-standards {
        .#{nth($column, 1)}-#{nth($standard, 1)} {
            @include breakpoint(nth($column, 2)) {
                width: #{nth($standard, 2)};
            }
        }
    }

    // Grid padding
    .#{nth($column, 1)}-delta {
        @include breakpoint(nth($column, 2)) {
            padding-right: $grid-gutter / 2;
            padding-left: $grid-gutter / 2;
        }
    }

    .#{nth($column, 1)}-alpha {
        @include breakpoint(nth($column, 2)) {
            padding-left: 0;
        }
    }

    .#{nth($column, 1)}-omega {
        @include breakpoint(nth($column, 2)) {
            padding-right: 0;
        }
    }

    // Grid spacer
    .#{nth($column, 1)}-spacer {
        @include breakpoint(nth($column, 2)) {
            margin-bottom: $grid-gutter * 2;
        }

        &:last-child {
            margin-bottom: 0;
        }
    }

    // Grid visilibilty
    .#{nth($column, 1)}-hide {
        @include breakpoint(nth($column, 2)) {
            display: none !important;
        }
    }

    .#{nth($column, 1)}-show {
        @include breakpoint(nth($column, 2)) {
            display: inherit !important;
        }
    }
}
